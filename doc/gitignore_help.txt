具体使用请看 man gitignore

 

一般某个项目dev过程中都会产生一些中间文件，这些文件是我们不想要追踪的。

Git中可以使用.gitignore文件来忽略这些文件。

 

在需要的目录下面 添加 .gitignore文件

文件中每一行表示需要忽略的文件的正则表达式。

$cat .gitignore 
 #ignore .metadata
 .metadata
 .gitignore

#ignore obj and lib file

*.[oa]

 

当前的目录情况

$ls -al
 total 24
 drwxr-xr-x  4 root root 4096 2010-12-11 12:44 .
 drwx------ 51 root root 4096 2010-12-11 12:44 ..
 drwxr-xr-x  8 root root 4096 2010-12-11 12:44 .git
 -rw-r--r--  1 root root   39 2010-12-11 12:44 .gitignore
 drwxr-xr-x  3 root root 4096 2010-08-19 20:01 .metadata
 -rw-r--r--  1 root root   52 2010-12-11 12:41 test.txt

 

如果没有添加该文件，git status会报有这些文件没有track。

$git status
 # On branch master
 # Untracked files:
 #   (use "git add <file>..." to include in what will be committed)
 #
 #    .metadata/
 #    gitignore

 

而 添加了该文件后，就可以看到，这个workspace 就是干净的了。

$mv gitignore .gitignore 
 [root@~/workspace]
 $git status
 # On branch master
 nothing to commit (working directory clean)

 

这个.gitignore很简单，当前目录下有个.metadata，这个是我们不需要的，所以就写入了文件。另外如果不加.gitignore这行，git会把.gitignore也加入版本控制中。


第一步：添加".gitignore"文件

往项目根目录添加一个文件".gitignore"。这文件和".git"文件夹同级。

但是在windows下无法创建".gitignore"文件名，必须把文件名改成这样".gitignore.",

在文件名最后加一个英文句号就可以了。

第二步：设置过滤条件


bin/ 过滤所有bin文件夹

obj/ 过滤所有obj文件夹

ValorNAV_deploy/ 过滤所有ValorNAV_deploy文件夹

*.dll 过滤所有dll文件，这个最好不要使用dll，因为项目中像lib文件夹我们会放一些dll包。

第三步：把".gitignore"文件提交并且push到服务器

其它的协作成员可以通过pull获取这个文件,其它人的过滤规则保持一致了。

1.如果新建一个空的Git仓库。直接拉取就可以了。

2.如果是一个已经使用了Git仓库，如果需要应用规则，则需要通过命令把相应要过滤的目录

的缓存删除。

git rm --cached <文件名> 删除文件的缓存

git rm --cached -r <目录名> 删除目录下的所有文件的缓存

通过上面的命令把缓存删除后，commit后再push到服务器。

其它的团队成员可以直接pull，过滤功能就能正常使用了。